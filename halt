#!/bin/sh
#
# Copyright (c) 2017 Johnothan King. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# halt(8)
#

# Usage info
usage() {
    echo "Usage: $1 [-dfhnprw]"
    echo ""
    echo "  -d            Ignored for compatibility (LeanInit currently does not write a wtmp entry on shutdown)"
    echo "  -f            Ignored for compatibility"
    echo "  -h            Show this usage information"
    echo "  -n            Ignored for compatibility (LeanInit is hardcoded to synchronize the filesystems before poweroff or reboot)"
    echo "  -r            Restart the system"
    echo "  -p            Ignored for compatibility"
    echo "  -w            Ignored for compatibility"
    exit $2
}

# Exit if not root
if [ $(id -u) != 0 ]; then
    echo "This must be run as root!"
    exit 1
fi

# Exit if the provided argument is just a dash
if [ "$1" = "-" ]; then
    echo "'-' is an invalid argument!"
    echo ""
    usage $0 1
fi

# Default to runlevel 0
export RUNLEVEL=0

# Determine what to do
while getopts "dfhnprw" argv; do
    case "$argv" in

        # Show usage info (with success)
        h)
            usage $0 0 ;;

        # Unsupported options are just ignored
        n)
            echo "WARNING: The option -n is not supported!" ;;
        w)
            echo "WARNING: The option -w is not supported!" ;;

        # -d, -f and -p are ignored
        d)
            command ;;
        f)
            command ;;
        p)
            command ;;

        # Set the runlevel to six
        r)
            export RUNLEVEL=6 ;;

        # Fallback
        *)
            echo ""
            usage $0 1 ;;

    esac
done

# Unmount, or mount as read only, all filesystems
umount -rat nodebugfs,nodevfs,noprocfs,nosysfs,notmpfs
mount -fo remount,ro /

# Send the new runlevel to init
exec init $RUNLEVEL
