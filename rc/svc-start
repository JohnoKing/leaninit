#!/bin/sh
#
# Copyright (c) 2018 Johnothan King. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# svc-start - used internally by rc and lsvc to start services
#

# Source rc.api
. /etc/leaninit.d/rc.api

# Only allow root to run this, with proper arguments
if [ "$2" != "init" ] && [ "$2" != "lsvc" ]; then
	print "This script is only meant for internal use!" nolog ${RED} ${LIGHT_RED}
	exit 1
fi

# Load the service's script
. /etc/leaninit.d/svc.d/$1

# Do not run if the service is already running
if [ "$2" != "init" ] && [ "$(pgrep -x $DAEMON)" != "" ]; then
	print "$NAME is already running" nolog ${LIGHT_PURPLE} ${YELLOW}
	exit 0
fi

# Start $NAME
if [ "$2" != "init" ]; then
	print "Starting $NAME (using lsvc)..." log ${BLUE} ${WHITE}
else
	print "Starting $NAME..." log ${LIGHT_BLUE} ${WHITE}
fi
main $2

# Return output
RET=$?
if [ $RET = 0 ]; then
	print "Started $NAME successfully" log ${LIGHT_GREEN} ${WHITE}
	echo "Started" > /var/log/leaninit/$1.status
else
	print "$NAME failed to start (exited with status $RET)" log ${RED} ${LIGHT_RED}
	echo "Failure" > /var/log/leaninit/$1.status
fi

exit $RET
