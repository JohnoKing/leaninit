#!/bin/sh
#
# Copyright (c) 2018 Johnothan King. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# svc-stop - used internally by rc and lsvc to stop services
#

# Only allow root to run this, with proper arguments
if [ `id -u` != 0 ] || [ "$1" = "" ]; then
	echo "This script is only meant for internal use!"
	exit 1
fi

# Set up variables
. /etc/leaninit/rc.api
. /etc/leaninit/svc/$1

# Do not attempt to run if the service is not running
if [ "`ps -acx | grep \" $DAEMON\"`" = "" ]; then
	print "$NAME is not running"
	exit 0
fi

# Stop $NAME
print "Stopping $NAME..."
kill `ps -acx | grep " $DAEMON" | awk '{print $1}'`

# Exit with error if the service failed to stop
RET=$?
if [ $? != 0 ] && [ "$2" != "f" ]; then
	print "ERROR: $NAME failed to stop (kill exited with status $RET)"
	exit $RET
fi

# Send SIGKILL if SIGTERM did not work (force only)
print "Sending $NAME SIGKILL..."
kill -s SIGKILL `ps -acx | grep " $DAEMON" | awk '{print $1}'`

# Finish
print "Stopped $NAME successfully"
exit 0
