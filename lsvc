#!/bin/sh
#
# Copyright (c) 2017 Johnothan King. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# Print info on how to use lsvc
usage() {
	echo $1 # Error message
	echo ""
	echo "Usage: lsvc [-de] service"
	echo "  -d            Disable a service"
	echo "  -e            Enable a service"
	exit $2 # Exit with a specified return status
}

# Exit if $2 is not set
if [ "$2" = "" ]; then
	usage "This program requires two arguments!" 1
fi

# Function to enable services
enable() {

	# If the service doesn't exist
	if [ ! -e /etc/leaninit/svc/$1 ]; then
		usage "The service $1 doesn't exist!" 1

	# If the service is already enabled
	elif [ -L /etc/leaninit/svce/$1 ]; then
		echo "The service $1 is already enabled"
		exit 0
	fi

	# Make a symlink in the /etc/leaninit/svce directory
	ln -s /etc/leaninit/svc/$1 /etc/leaninit/svce
	echo "The service $1 has been enabled"
	exit 0
}

disable() {

	# If a symlink to the service doesn't exist in /etc/leaninit/svce
	if [ ! -L /etc/leaninit/svce/$1 ]; then

		# If the service does exist, but is not enabled
		if [ -e /etc/leaninit/svc/$1 ]; then
			echo "The service $1 is not enabled"
			exit 0

		# If the service doesn't exist
		else
			usage "The service $1 doesn't exist!" 1
		fi
	fi

	# Delete just the symlink to the service
	rm /etc/leaninit/svce/$1
	echo "The service $1 has been disabled"
	exit 0
}

# Each function called here terminates the script once done, thus an extra exit is unnecessary
case "$1" in

	# Enable a service
	-e)
		enable $2 ;;

	# Disable a service
	-d)
		disable $2 ;;

	# Fallback
	*)
		usage "Argument $1 is invalid!" 1 ;;
esac
